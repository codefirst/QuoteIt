.page-header
  %h1
    Sandbox
    %small
      test your own plugin

%form.plugin-definition
  %h2 Plugin definition
  .clearfix
    %label Plugin type
    .input
      %select.plugin-type{:name=>'plugin-type'}
        %option{:value=>'thumbnail'} Thumbnail
        %option{:value=>'web-clip'} Web clip
  .thumbnail.plugin
    .clearfix
      %label Regexp for URL
      .input
        %input.regexp.xlarge{:placeholder=> 'example\.com/(.*)', :name=>'regexp'}
    .clearfix
      %label Thumbnail URL
      .input
        %input.thumbnail.xlarge{:placeholder=> 'http://example.com/thumbnail/$1', :name => 'thumbnail'}
        %p.help-block <strong>Note:</strong> $1, $2, etc. hold the text matched by the first, second, and following capturing groups.
  .web-clip.plugin{:style=>'display:none'}
    .clearfix
      %label Regexp for URL
      .input
        %input.xlarge.regexp
    .clearfix
      %label Clip URL
      .input
        %input.xlarge.clip
        %p.help-block <strong>Note:</strong> $1, $2, etc. hold the text matched by the first, second, and following capturing groups.
    .clearfix
      %label
        Transform(Ruby)
        %span.help-block optional
      .input
        =text_area_tag('content', :value => @content, :class => 'edit-text transform', :id => 'code')
        .help-block
          %h4 Available variable
          %ul
            %li <code>content</code>: content of clip URL
            %li <code>json</code>: parse result of <code>content</code>
            %li <code>original_url</code>: original URL
            %li <code>clip_url</code>: clip URL

  %h2 Plugin test
  .plugin-test
    .clearfix
      %label Sample URL
      .input
        %input.url.xlarge{:placeholder => 'http://example.com/foo', :name=>'url'}
    .clearfix
      .input
        %input.btn.primary{:type=>'submit', :value => 'test'}

%h2 Result
.result

- content_for :include do
  = javascript_include_tag 'codemirror','codemirror/mode/ruby/ruby','jquery','sandbox'
:javascript
  var QuoteIt = {
    thumbnail_sandbox : '#{url_for(:sandbox_thumbnail)}',
    webClip_sandbox : '#{url_for(:sandbox_webClip)}'
  };
